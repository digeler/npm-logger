---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: azurefile
provisioner: kubernetes.io/azure-file
mountOptions:
  - dir_mode=0777
  - file_mode=0777
  - uid=1000
  - gid=1000
parameters:
  skuName: Standard_LRS
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: azurefile
  namespace: kube-system
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: azurefile
  resources:
    requests:
      storage: 100Gi
---



apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: azure-npm-logger
  namespace: kube-system
  labels:
    app: azure-npm-logger-logger
    
spec:
  selector:
    matchLabels:
      k8s-app: azure-npm-logger
  template:
    metadata:
      labels:
        k8s-app: azure-npm-logger
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      nodeSelector:
        beta.kubernetes.io/os: linux
       
      containers:
        - name: azure-npm-logger
          image: dinorg/npm-logger:v1
          imagePullPolicy: Always
          securityContext:
            privileged: true
          env:
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          volumeMounts:
          - name: xtables-lock
            mountPath: /run/xtables.lock
          - name: log
            mountPath: /var/log
          - name: socket-dir
            mountPath: /var/run
          - name: tmp
            mountPath: /tmp
          - name: logcollector
            mountPath: /mnt/npmlogs  
       
      hostNetwork: true
      volumes:
      - name: log
        hostPath:
          path: /var/log
          type: Directory
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: File
      - name: tmp
        hostPath:
          path: /tmp
          type: Directory
      - name: socket-dir
        emptyDir: {}
      - name: logcollector
        persistentVolumeClaim:
          claimName: "azurefile"
      